//------------------------------------------------------------------------------
// <auto-generated>
//     Este código se generó a partir de una plantilla.
//
//     Los cambios manuales en este archivo pueden causar un comportamiento inesperado de la aplicación.
//     Los cambios manuales en este archivo se sobrescribirán si se regenera el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace DataSource.Comic
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using System.Linq;
    
    public partial class ComicEntities : DbContext
    {
        public ComicEntities()
            : base("name=ComicEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<Biografia> Biografia { get; set; }
        public virtual DbSet<EstadisticasPoder> EstadisticasPoder { get; set; }
        public virtual DbSet<Heroe> Heroe { get; set; }
        public virtual DbSet<Rol> Rol { get; set; }
        public virtual DbSet<Usuario> Usuario { get; set; }
        public virtual DbSet<Contacto> Contacto { get; set; }
    
        public virtual int SPDeleteHeroe(Nullable<int> heroeId)
        {
            var heroeIdParameter = heroeId.HasValue ?
                new ObjectParameter("HeroeId", heroeId) :
                new ObjectParameter("HeroeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPDeleteHeroe", heroeIdParameter);
        }
    
        public virtual int SPDeleteUsuario(Nullable<int> usuarioId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPDeleteUsuario", usuarioIdParameter);
        }
    
        public virtual int SPInsertHeroe(string nombre, string descripcion, string rutaImagen, string nombreCompleto, string genero, Nullable<System.DateTime> aparicion, string alias, string editor, Nullable<int> inteligencia, Nullable<int> fuerza, Nullable<int> velocidad, Nullable<int> durabilidad, Nullable<int> poder, Nullable<int> combate)
        {
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var rutaImagenParameter = rutaImagen != null ?
                new ObjectParameter("RutaImagen", rutaImagen) :
                new ObjectParameter("RutaImagen", typeof(string));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var aparicionParameter = aparicion.HasValue ?
                new ObjectParameter("Aparicion", aparicion) :
                new ObjectParameter("Aparicion", typeof(System.DateTime));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var editorParameter = editor != null ?
                new ObjectParameter("Editor", editor) :
                new ObjectParameter("Editor", typeof(string));
    
            var inteligenciaParameter = inteligencia.HasValue ?
                new ObjectParameter("Inteligencia", inteligencia) :
                new ObjectParameter("Inteligencia", typeof(int));
    
            var fuerzaParameter = fuerza.HasValue ?
                new ObjectParameter("Fuerza", fuerza) :
                new ObjectParameter("Fuerza", typeof(int));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("Velocidad", velocidad) :
                new ObjectParameter("Velocidad", typeof(int));
    
            var durabilidadParameter = durabilidad.HasValue ?
                new ObjectParameter("Durabilidad", durabilidad) :
                new ObjectParameter("Durabilidad", typeof(int));
    
            var poderParameter = poder.HasValue ?
                new ObjectParameter("Poder", poder) :
                new ObjectParameter("Poder", typeof(int));
    
            var combateParameter = combate.HasValue ?
                new ObjectParameter("Combate", combate) :
                new ObjectParameter("Combate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsertHeroe", nombreParameter, descripcionParameter, rutaImagenParameter, nombreCompletoParameter, generoParameter, aparicionParameter, aliasParameter, editorParameter, inteligenciaParameter, fuerzaParameter, velocidadParameter, durabilidadParameter, poderParameter, combateParameter);
        }
    
        public virtual int SPInsertUsuario(string rut, string nombre, string apellido, Nullable<System.DateTime> fechaNacimiento, string contrasena, Nullable<bool> activo, Nullable<System.DateTimeOffset> registrado, string correoElectronico, string telefono, Nullable<int> rolId)
        {
            var rutParameter = rut != null ?
                new ObjectParameter("Rut", rut) :
                new ObjectParameter("Rut", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var registradoParameter = registrado.HasValue ?
                new ObjectParameter("Registrado", registrado) :
                new ObjectParameter("Registrado", typeof(System.DateTimeOffset));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var telefonoParameter = telefono != null ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(string));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPInsertUsuario", rutParameter, nombreParameter, apellidoParameter, fechaNacimientoParameter, contrasenaParameter, activoParameter, registradoParameter, correoElectronicoParameter, telefonoParameter, rolIdParameter);
        }
    
        public virtual ObjectResult<SPListBiografia_Result> SPListBiografia()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListBiografia_Result>("SPListBiografia");
        }
    
        public virtual ObjectResult<SPListBiografiaPaginated_Result> SPListBiografiaPaginated(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListBiografiaPaginated_Result>("SPListBiografiaPaginated", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SPListContacto_Result> SPListContacto()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListContacto_Result>("SPListContacto");
        }
    
        public virtual ObjectResult<SPListContactoPaginated_Result> SPListContactoPaginated(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListContactoPaginated_Result>("SPListContactoPaginated", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SPListEstadisticasPoder_Result> SPListEstadisticasPoder()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListEstadisticasPoder_Result>("SPListEstadisticasPoder");
        }
    
        public virtual ObjectResult<SPListEstadisticasPoderPaginated_Result> SPListEstadisticasPoderPaginated(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListEstadisticasPoderPaginated_Result>("SPListEstadisticasPoderPaginated", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SPListHeroe_Result> SPListHeroe()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListHeroe_Result>("SPListHeroe");
        }
    
        public virtual ObjectResult<SPListHeroePaginated_Result> SPListHeroePaginated(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListHeroePaginated_Result>("SPListHeroePaginated", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SPListRol_Result> SPListRol()
        {
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListRol_Result>("SPListRol");
        }
    
        public virtual ObjectResult<SPListRolPaginated_Result> SPListRolPaginated(Nullable<int> pageIndex, Nullable<int> pageSize)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListRolPaginated_Result>("SPListRolPaginated", pageIndexParameter, pageSizeParameter);
        }
    
        public virtual ObjectResult<SPListUsuario_Result> SPListUsuario(string timeZoneInfoName)
        {
            var timeZoneInfoNameParameter = timeZoneInfoName != null ?
                new ObjectParameter("TimeZoneInfoName", timeZoneInfoName) :
                new ObjectParameter("TimeZoneInfoName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListUsuario_Result>("SPListUsuario", timeZoneInfoNameParameter);
        }
    
        public virtual ObjectResult<SPListUsuarioPaginated_Result> SPListUsuarioPaginated(Nullable<int> pageIndex, Nullable<int> pageSize, string timeZoneInfoName)
        {
            var pageIndexParameter = pageIndex.HasValue ?
                new ObjectParameter("PageIndex", pageIndex) :
                new ObjectParameter("PageIndex", typeof(int));
    
            var pageSizeParameter = pageSize.HasValue ?
                new ObjectParameter("PageSize", pageSize) :
                new ObjectParameter("PageSize", typeof(int));
    
            var timeZoneInfoNameParameter = timeZoneInfoName != null ?
                new ObjectParameter("TimeZoneInfoName", timeZoneInfoName) :
                new ObjectParameter("TimeZoneInfoName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPListUsuarioPaginated_Result>("SPListUsuarioPaginated", pageIndexParameter, pageSizeParameter, timeZoneInfoNameParameter);
        }
    
        public virtual ObjectResult<SPLogin_Result> SPLogin(string userRut, string userContrasena)
        {
            var userRutParameter = userRut != null ?
                new ObjectParameter("UserRut", userRut) :
                new ObjectParameter("UserRut", typeof(string));
    
            var userContrasenaParameter = userContrasena != null ?
                new ObjectParameter("UserContrasena", userContrasena) :
                new ObjectParameter("UserContrasena", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPLogin_Result>("SPLogin", userRutParameter, userContrasenaParameter);
        }
    
        public virtual ObjectResult<SPSelectHeroe_Result> SPSelectHeroe(Nullable<int> heroeId)
        {
            var heroeIdParameter = heroeId.HasValue ?
                new ObjectParameter("HeroeId", heroeId) :
                new ObjectParameter("HeroeId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPSelectHeroe_Result>("SPSelectHeroe", heroeIdParameter);
        }
    
        public virtual ObjectResult<SPSelectUsuario_Result> SPSelectUsuario(Nullable<int> usuarioId, string timeZoneInfoName)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var timeZoneInfoNameParameter = timeZoneInfoName != null ?
                new ObjectParameter("TimeZoneInfoName", timeZoneInfoName) :
                new ObjectParameter("TimeZoneInfoName", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction<SPSelectUsuario_Result>("SPSelectUsuario", usuarioIdParameter, timeZoneInfoNameParameter);
        }
    
        public virtual int SPUpdateHeroe(Nullable<int> heroeId, string nombre, string descripcion, string rutaImagen, Nullable<int> biografiaId, string nombreCompleto, string genero, Nullable<System.DateTime> aparicion, string alias, string editor, Nullable<int> estadisticasPoderId, Nullable<int> inteligencia, Nullable<int> fuerza, Nullable<int> velocidad, Nullable<int> durabilidad, Nullable<int> poder, Nullable<int> combate)
        {
            var heroeIdParameter = heroeId.HasValue ?
                new ObjectParameter("HeroeId", heroeId) :
                new ObjectParameter("HeroeId", typeof(int));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var descripcionParameter = descripcion != null ?
                new ObjectParameter("Descripcion", descripcion) :
                new ObjectParameter("Descripcion", typeof(string));
    
            var rutaImagenParameter = rutaImagen != null ?
                new ObjectParameter("RutaImagen", rutaImagen) :
                new ObjectParameter("RutaImagen", typeof(string));
    
            var biografiaIdParameter = biografiaId.HasValue ?
                new ObjectParameter("BiografiaId", biografiaId) :
                new ObjectParameter("BiografiaId", typeof(int));
    
            var nombreCompletoParameter = nombreCompleto != null ?
                new ObjectParameter("NombreCompleto", nombreCompleto) :
                new ObjectParameter("NombreCompleto", typeof(string));
    
            var generoParameter = genero != null ?
                new ObjectParameter("Genero", genero) :
                new ObjectParameter("Genero", typeof(string));
    
            var aparicionParameter = aparicion.HasValue ?
                new ObjectParameter("Aparicion", aparicion) :
                new ObjectParameter("Aparicion", typeof(System.DateTime));
    
            var aliasParameter = alias != null ?
                new ObjectParameter("Alias", alias) :
                new ObjectParameter("Alias", typeof(string));
    
            var editorParameter = editor != null ?
                new ObjectParameter("Editor", editor) :
                new ObjectParameter("Editor", typeof(string));
    
            var estadisticasPoderIdParameter = estadisticasPoderId.HasValue ?
                new ObjectParameter("EstadisticasPoderId", estadisticasPoderId) :
                new ObjectParameter("EstadisticasPoderId", typeof(int));
    
            var inteligenciaParameter = inteligencia.HasValue ?
                new ObjectParameter("Inteligencia", inteligencia) :
                new ObjectParameter("Inteligencia", typeof(int));
    
            var fuerzaParameter = fuerza.HasValue ?
                new ObjectParameter("Fuerza", fuerza) :
                new ObjectParameter("Fuerza", typeof(int));
    
            var velocidadParameter = velocidad.HasValue ?
                new ObjectParameter("Velocidad", velocidad) :
                new ObjectParameter("Velocidad", typeof(int));
    
            var durabilidadParameter = durabilidad.HasValue ?
                new ObjectParameter("Durabilidad", durabilidad) :
                new ObjectParameter("Durabilidad", typeof(int));
    
            var poderParameter = poder.HasValue ?
                new ObjectParameter("Poder", poder) :
                new ObjectParameter("Poder", typeof(int));
    
            var combateParameter = combate.HasValue ?
                new ObjectParameter("Combate", combate) :
                new ObjectParameter("Combate", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPUpdateHeroe", heroeIdParameter, nombreParameter, descripcionParameter, rutaImagenParameter, biografiaIdParameter, nombreCompletoParameter, generoParameter, aparicionParameter, aliasParameter, editorParameter, estadisticasPoderIdParameter, inteligenciaParameter, fuerzaParameter, velocidadParameter, durabilidadParameter, poderParameter, combateParameter);
        }
    
        public virtual int SPUpdateUsuario(Nullable<int> usuarioId, string rut, string nombre, string apellido, Nullable<System.DateTime> fechaNacimiento, string contrasena, Nullable<bool> activo, Nullable<int> contactoId, string correoElectronico, Nullable<decimal> telefono, Nullable<int> rolId)
        {
            var usuarioIdParameter = usuarioId.HasValue ?
                new ObjectParameter("UsuarioId", usuarioId) :
                new ObjectParameter("UsuarioId", typeof(int));
    
            var rutParameter = rut != null ?
                new ObjectParameter("Rut", rut) :
                new ObjectParameter("Rut", typeof(string));
    
            var nombreParameter = nombre != null ?
                new ObjectParameter("Nombre", nombre) :
                new ObjectParameter("Nombre", typeof(string));
    
            var apellidoParameter = apellido != null ?
                new ObjectParameter("Apellido", apellido) :
                new ObjectParameter("Apellido", typeof(string));
    
            var fechaNacimientoParameter = fechaNacimiento.HasValue ?
                new ObjectParameter("FechaNacimiento", fechaNacimiento) :
                new ObjectParameter("FechaNacimiento", typeof(System.DateTime));
    
            var contrasenaParameter = contrasena != null ?
                new ObjectParameter("Contrasena", contrasena) :
                new ObjectParameter("Contrasena", typeof(string));
    
            var activoParameter = activo.HasValue ?
                new ObjectParameter("Activo", activo) :
                new ObjectParameter("Activo", typeof(bool));
    
            var contactoIdParameter = contactoId.HasValue ?
                new ObjectParameter("ContactoId", contactoId) :
                new ObjectParameter("ContactoId", typeof(int));
    
            var correoElectronicoParameter = correoElectronico != null ?
                new ObjectParameter("CorreoElectronico", correoElectronico) :
                new ObjectParameter("CorreoElectronico", typeof(string));
    
            var telefonoParameter = telefono.HasValue ?
                new ObjectParameter("Telefono", telefono) :
                new ObjectParameter("Telefono", typeof(decimal));
    
            var rolIdParameter = rolId.HasValue ?
                new ObjectParameter("RolId", rolId) :
                new ObjectParameter("RolId", typeof(int));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("SPUpdateUsuario", usuarioIdParameter, rutParameter, nombreParameter, apellidoParameter, fechaNacimientoParameter, contrasenaParameter, activoParameter, contactoIdParameter, correoElectronicoParameter, telefonoParameter, rolIdParameter);
        }
    }
}
